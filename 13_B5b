/*

Write C++ program to generate Hilbert curve using concept of fractals

*/


#include<iostream>
#include<math.h>
#include<graphics.h>
using namespace std;
void move(int j , int h ,int&x , int&y){
	if(j==1){
		y=y-h;
		cout<<" x= "<<x<<" "<<"y= "<<y<<endl;
	}
	else if(j==2){
		x=x+h;
		cout<<" x= "<<x<<" "<<"y= "<<y<<endl;
	}
	else if(j==3){
		y=y+h;
		cout<<" x= "<<x<<" "<<"y= "<<y<<endl;
	}
	else if(j==4){
		x=x-h;
		cout<<" x= "<<x<<" "<<"y= "<<y<<endl;
	}
	lineto(x,y);
	delay(500);
}

void hilbert(int r, int d,int l, int u, int i,int h , int &x,int &y){
	if(i>0){
		i--;
		hilbert(d,r,u,l,i,h,x,y);
		move(d,h,x,y);
		hilbert(r,d,l,u,i,h,x,y);
		move(r,h,x,y);
		hilbert(r,d,l,u,i,h,x,y);
		move(u,h,x,y);
		hilbert(u,l,d,r,i,h,x,y);
	}
}
int main(){
	int n ;
	int x0=50,y0=150,x,y,h=10,r=2,d=3,l=4,u=1;
	cout<<"\ngive the value of n : ";
	cin>>n;x=x0;y=y0;
	int gd= DETECT,gm ;
	initgraph (&gd,&gm," ");
	moveto(x,y);
	hilbert(r,d,l,u,n,h,x,y);
	delay(50000);
	closegraph();
	return 0 ;
}
